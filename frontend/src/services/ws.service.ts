// frontend/src/services/ws.service.ts

class WsService {
    private socket: WebSocket | null = null
  
    connect(userId: string): void {
      const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws'
      const host = window.location.host
      const url = `${protocol}://${host}/hub/chat?userId=${userId}`
  
      this.socket = new WebSocket(url)
  
      this.socket.onopen = () => {
        console.log('üü¢ WS –ø–æ–¥–∫–ª—é—á–µ–Ω:', url)
      }
  
      this.socket.onerror = (event: Event) => {
        console.error('‚ùå WS –æ—à–∏–±–∫–∞:', event)
      }
  
      this.socket.onclose = (event: CloseEvent) => {
        console.log(`üîå WS –æ—Ç–∫–ª—é—á–µ–Ω (–∫–æ–¥ ${event.code}, –ø—Ä–∏—á–∏–Ω–∞: ${event.reason})`)
      }
  
      this.socket.onmessage = (msgEvent: MessageEvent) => {
        try {
          const data = JSON.parse(msgEvent.data)
          console.log('üì® WS —Å–æ–æ–±—â–µ–Ω–∏–µ:', data)
          // TODO: –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–ª—å—à–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        } catch {
          console.warn('–ù–µ —Å–º–æ–≥ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å WS-—Å–æ–æ–±—â–µ–Ω–∏–µ:', msgEvent.data)
        }
      }
    }
  
    send(message: any): void {
      if (this.socket && this.socket.readyState === WebSocket.OPEN) {
        this.socket.send(JSON.stringify(message))
      } else {
        console.error('WS –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', message)
      }
    }
  
    disconnect(): void {
      if (this.socket) {
        this.socket.close()
        this.socket = null
      }
    }
  }
  
  const wsService = new WsService()
  
  /**
   * –û—Ç–∫—Ä—ã—Ç—å WS-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
   */
  export function connectToWebSocket(userId: string): void {
    wsService.connect(userId)
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ WS
   */
  export function sendWsMessage(message: any): void {
    wsService.send(message)
  }
  
  /**
   * –ó–∞–∫—Ä—ã—Ç—å WS-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
   */
  export function disconnectWebSocket(): void {
    wsService.disconnect()
  }
  
  // –ï—Å–ª–∏ –∫–æ–º—É-—Ç–æ –Ω—É–∂–µ–Ω —Å–∞–º —Å–µ—Ä–≤–∏—Å
  export default wsService
  