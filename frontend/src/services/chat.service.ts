import api from './api'
import type {MessageDto, SendMessageRequest} from '@/types/Message'

export const getMessages = async (recipientId: string): Promise<MessageDto[]> => {
    const response = await api.get(`/api/chat/history/${recipientId}`)
    return response.data
}

export const sendMessage = async (
    recipientId: string,
    data: SendMessageRequest
): Promise<MessageDto> => {
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    if (!data.encryptedAesKey || !data.encryptedContent || !data.iv) {
        console.error('‚ùå –û—à–∏–±–∫–∞: –æ–¥–∏–Ω –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', data)
        throw new Error('Encrypted message data is incomplete')
    }

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', {
        receiverId: recipientId,
        ...data
    })

    const response = await api.post('/api/chat/send', {
        receiverId: recipientId,
        encryptedContent: data.encryptedContent,
        encryptedAesKey: data.encryptedAesKey,
        iv: data.iv,
        content: data.content ?? '',
        type: data.type ?? 0
    })
    return response.data
}