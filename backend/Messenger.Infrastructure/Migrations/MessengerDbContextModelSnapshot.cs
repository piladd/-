using Messenger.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

// <auto-generated />

#nullable disable

namespace Messenger.Infrastructure.Migrations;

[DbContext(typeof(MessengerDbContext))]
partial class MessengerDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.0")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Messenger.Domain.Entities.Chat", b =>
        {
            b.Property<Guid>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("uuid");

            b.Property<string>("Title")
                .IsRequired()
                .HasColumnType("text");

            b.HasKey("Id");

            b.ToTable("Chats");
        });

        modelBuilder.Entity("Messenger.Domain.Entities.Message", b =>
        {
            b.Property<Guid>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("uuid");

            b.Property<Guid>("ChatId")
                .HasColumnType("uuid");

            b.Property<string>("Content")
                .IsRequired()
                .HasColumnType("text");

            b.Property<Guid>("SenderId")
                .HasColumnType("uuid");

            b.Property<DateTime>("SentAt")
                .HasColumnType("timestamp with time zone");

            b.Property<int>("Type")
                .HasColumnType("integer");

            b.HasKey("Id");

            b.HasIndex("ChatId");

            b.HasIndex("SenderId");

            b.ToTable("Messages");
        });

        modelBuilder.Entity("Messenger.Domain.Entities.User", b =>
        {
            b.Property<Guid>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("uuid");

            b.Property<string>("PasswordHash")
                .IsRequired()
                .HasColumnType("text");

            b.Property<byte[]>("PublicKey")
                .IsRequired()
                .HasColumnType("bytea");

            b.Property<string>("Username")
                .IsRequired()
                .HasColumnType("text");

            b.HasKey("Id");

            b.ToTable("Users");
        });

        modelBuilder.Entity("Messenger.Domain.Entities.Message", b =>
        {
            b.HasOne("Messenger.Domain.Entities.Chat", "Chat")
                .WithMany("Messages")
                .HasForeignKey("ChatId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired();

            b.HasOne("Messenger.Domain.Entities.User", "Sender")
                .WithMany("SentMessages")
                .HasForeignKey("SenderId")
                .OnDelete(DeleteBehavior.Restrict)
                .IsRequired();

            b.Navigation("Chat");

            b.Navigation("Sender");
        });

        modelBuilder.Entity("Messenger.Domain.Entities.Chat", b =>
        {
            b.Navigation("Messages");
        });

        modelBuilder.Entity("Messenger.Domain.Entities.User", b =>
        {
            b.Navigation("SentMessages");
        });
#pragma warning restore 612, 618
    }
}